在实际开发过程中，会经常有遇到外部定义的数据结构实际上对自己开发并不方便，所以有时候会需要自己
增加一些新的字段，并在使用相关字段的时候手动进行赋值处理。
而这一方案有诸多不合理之处，一个是要把非下发的数据字段赋值处理入侵到正常的业务逻辑之中，一定程度干扰了业务逻辑代码
，另一个是，如果最先使用这些字段的场景发生了变化，跟原先的预期不一致，那么会很容易导致潜在问题。所以这样的方案，
应该趁早摒除。

通过一番探究，这里有一个很不错的方案可以解决这个问题。我们项目使用的是Gson进行反序列化，通过gsonBuilder，注册
一个自定义的TypeAdapterFactory，这个Factory每次会委托给Gson默认的TypeAdapter去先反序列化，之后再检查拿到的对象
是否实现了自定义的PostProcessable接口，若实现便调用即可。
此方案把数据预处理真正放在了业务层拿到Java对象之前，如此便自然解决了上述的两个问题。这个方案还有两个值得注意的
地方：
1.对于内嵌的任何复杂结构都依然适用。所以便于职责分离，不必总把预处理的工作交给最外层的实现。
2.接口方法被回调的时候，下发字段都已经正常得到了处理。所以可以尽情适用下发字段进行逻辑判断等。

One More Thing:
去GitHub上搜一下PostProcessable，看看Java方面的code，你会发现好多项目里都有这个东西哎，实现甚至都一样哎。
